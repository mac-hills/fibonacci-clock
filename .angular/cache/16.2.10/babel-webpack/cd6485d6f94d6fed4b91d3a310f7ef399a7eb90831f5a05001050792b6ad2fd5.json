{"ast":null,"code":"import { clockColors } from 'src/app/resources/color-resources/clockColors';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/color.service\";\nimport * as i2 from \"ngx-color-picker\";\nimport * as i3 from \"@angular/router\";\nexport let TutorialComponent = /*#__PURE__*/(() => {\n  class TutorialComponent {\n    constructor(colorService, colorPickerService, router) {\n      this.colorService = colorService;\n      this.colorPickerService = colorPickerService;\n      this.router = router;\n      this.clockColors = clockColors;\n    }\n    launchColorPicker(colorKey) {\n      const inputElement = document.createElement('input');\n      inputElement.type = 'color';\n      inputElement.value = this.colorService.getClockColors()[colorKey];\n      // Handle color selection\n      inputElement.addEventListener('input', event => {\n        const colorSelected = event.target.value;\n        this.colorService.updateColor(colorKey, colorSelected);\n      });\n      inputElement.click();\n    }\n    backToClock() {\n      this.router.navigate(['/clock']);\n    }\n    goToSettings() {\n      this.router.navigate(['/settings']);\n    }\n    static #_ = this.ɵfac = function TutorialComponent_Factory(t) {\n      return new (t || TutorialComponent)(i0.ɵɵdirectiveInject(i1.ColorService), i0.ɵɵdirectiveInject(i2.ColorPickerService), i0.ɵɵdirectiveInject(i3.Router));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TutorialComponent,\n      selectors: [[\"app-tutorial\"]],\n      decls: 50,\n      vars: 16,\n      consts: [[1, \"showtime\"], [\"id\", \"colorDisplay\"], [\"id\", \"colorWhenUsedForHours\", 1, \"colorPresenter\", 3, \"click\"], [\"id\", \"colorWhenUsedForMinutes\", 1, \"colorPresenter\", 3, \"click\"], [\"id\", \"colorWhenUsedForHoursAndMinutes\", 1, \"colorPresenter\", 3, \"click\"], [\"id\", \"colorWhenNotUsed\", 1, \"colorPresenter\", 3, \"click\"], [\"id\", \"clockBackGroundColorArrayStartColor\", 1, \"colorPresenter\", 3, \"click\"], [\"id\", \"clockBackGroundColorArrayEndColor\", 1, \"colorPresenter\", 3, \"click\"], [\"id\", \"secondsCounterArrayStartColor\", 1, \"colorPresenter\", 3, \"click\"], [\"id\", \"secondsCounterArrayEndColor\", 1, \"colorPresenter\", 3, \"click\"], [1, \"settings-button\", 3, \"click\"], [1, \"backToClockButton\", 3, \"click\"]],\n      template: function TutorialComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Understanding Time with the Fibonacci Clock\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"p\");\n          i0.ɵɵtext(4, \"The Fibonacci Clock is based on the mathematical sequence created by the Italian mathematician Fibonacci in the 13th century. Beginning with 1 and 1, each subsequent number is the sum of the two preceding ones. The clock utilizes the initial terms of this sequence: \");\n          i0.ɵɵelementStart(5, \"strong\");\n          i0.ɵɵtext(6, \"1, 1, 2, 3, 5, 8, 13, 21 and 34\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(7, \".\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"h3\");\n          i0.ɵɵtext(9, \"Shapes\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"p\");\n          i0.ɵɵtext(11, \"The display consists of shapes, each sized according to the initial Fibonacci numbers: 1, 1, 2, 3... The smallest shape represents a 1. The largest shape represents 34. The other shapes from small to large represent 2, 3, 5, 8, 13 and 21to 21. \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"h3\");\n          i0.ɵɵtext(13, \"Calculate time\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"h4\");\n          i0.ɵɵtext(15, \"Hour\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"p\");\n          i0.ɵɵtext(17, \"Sum up the values of the shapes depicted in the colors that represent the hour and the shapes that represent hours and minutes.\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"h4\");\n          i0.ɵɵtext(19, \"Minutes\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"p\");\n          i0.ɵɵtext(21, \"Sum up the values of the shapes depicted in the colors that represent the minutes and the shapes that represent hours and minutes.\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(22, \"h4\");\n          i0.ɵɵtext(23, \"Seconds\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(24, \"p\");\n          i0.ɵɵtext(25, \"Seconds are depicted in a color-changing shape, transitioning every second. Additionally, the background darkens every second, and after a minute passes, it returns to its original lighter state.\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(26, \"br\");\n          i0.ɵɵelementStart(27, \"h3\");\n          i0.ɵɵtext(28, \"Colors\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(29, \"div\", 1)(30, \"div\", 2);\n          i0.ɵɵlistener(\"click\", function TutorialComponent_Template_div_click_30_listener() {\n            return ctx.launchColorPicker(\"colorWhenUsedForHours\");\n          });\n          i0.ɵɵtext(31, \"This color represents hours \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(32, \"div\", 3);\n          i0.ɵɵlistener(\"click\", function TutorialComponent_Template_div_click_32_listener() {\n            return ctx.launchColorPicker(\"colorWhenUsedForMinutes\");\n          });\n          i0.ɵɵtext(33, \"This color represents minutes \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(34, \"div\", 4);\n          i0.ɵɵlistener(\"click\", function TutorialComponent_Template_div_click_34_listener() {\n            return ctx.launchColorPicker(\"colorWhenUsedForHoursAndMinutes\");\n          });\n          i0.ɵɵtext(35, \"This color represents hours and minutes \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(36, \"div\", 5);\n          i0.ɵɵlistener(\"click\", function TutorialComponent_Template_div_click_36_listener() {\n            return ctx.launchColorPicker(\"colorWhenNotUsed\");\n          });\n          i0.ɵɵtext(37, \"This color indicates that this shape is not used to tell the time \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(38, \"div\", 6);\n          i0.ɵɵlistener(\"click\", function TutorialComponent_Template_div_click_38_listener() {\n            return ctx.launchColorPicker(\"clockBackGroundColorArrayStartColor\");\n          });\n          i0.ɵɵtext(39, \"Start color background colors \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(40, \"div\", 7);\n          i0.ɵɵlistener(\"click\", function TutorialComponent_Template_div_click_40_listener() {\n            return ctx.launchColorPicker(\"clockBackGroundColorArrayEndColor\");\n          });\n          i0.ɵɵtext(41, \"Last color background colors \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(42, \"div\", 8);\n          i0.ɵɵlistener(\"click\", function TutorialComponent_Template_div_click_42_listener() {\n            return ctx.launchColorPicker(\"secondsCounterArrayStartColor\");\n          });\n          i0.ɵɵtext(43, \"Start color seconds counter colors \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(44, \"div\", 9);\n          i0.ɵɵlistener(\"click\", function TutorialComponent_Template_div_click_44_listener() {\n            return ctx.launchColorPicker(\"secondsCounterArrayEndColor\");\n          });\n          i0.ɵɵtext(45, \"Last color seconds counter colors \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(46, \"button\", 10);\n          i0.ɵɵlistener(\"click\", function TutorialComponent_Template_button_click_46_listener() {\n            return ctx.goToSettings();\n          });\n          i0.ɵɵtext(47, \"Color Settings\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(48, \"button\", 11);\n          i0.ɵɵlistener(\"click\", function TutorialComponent_Template_button_click_48_listener() {\n            return ctx.backToClock();\n          });\n          i0.ɵɵtext(49, \"Back to clock\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(30);\n          i0.ɵɵstyleProp(\"background-color\", ctx.clockColors[\"colorWhenUsedForHours\"]);\n          i0.ɵɵadvance(2);\n          i0.ɵɵstyleProp(\"background-color\", ctx.clockColors[\"colorWhenUsedForMinutes\"]);\n          i0.ɵɵadvance(2);\n          i0.ɵɵstyleProp(\"background-color\", ctx.clockColors[\"colorWhenUsedForHoursAndMinutes\"]);\n          i0.ɵɵadvance(2);\n          i0.ɵɵstyleProp(\"background-color\", ctx.clockColors[\"colorWhenNotUsed\"]);\n          i0.ɵɵadvance(2);\n          i0.ɵɵstyleProp(\"background-color\", ctx.clockColors[\"clockBackGroundColorArrayStartColor\"]);\n          i0.ɵɵadvance(2);\n          i0.ɵɵstyleProp(\"background-color\", ctx.clockColors[\"clockBackGroundColorArrayEndColor\"]);\n          i0.ɵɵadvance(2);\n          i0.ɵɵstyleProp(\"background-color\", ctx.clockColors[\"secondsCounterArrayStartColor\"]);\n          i0.ɵɵadvance(2);\n          i0.ɵɵstyleProp(\"background-color\", ctx.clockColors[\"secondsCounterArrayEndColor\"]);\n        }\n      },\n      styles: [\".showtime[_ngcontent-%COMP%]{margin-left:auto;margin-right:auto;height:100vh;width:80%;font-family:Arial,Helvetica,sans-serif;color:#fff;text-shadow:2px 2px 4px rgba(0,0,0,1)}.colorPresenter[_ngcontent-%COMP%]{border-radius:10px;font-weight:700;font-size:larger;padding:15px;margin-bottom:15px;color:#fff;text-shadow:2px 2px 4px rgba(0,0,0,1);box-shadow:0 4px 8px #000;flex:0 0 48%;box-sizing:border-box}#colorDisplay[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;padding-bottom:0;justify-content:space-between}.backToClockButton[_ngcontent-%COMP%]{border-radius:10px;font-weight:700;font-size:larger;padding:15px;margin-bottom:15px;background-color:#1e90ff;color:#fff;text-shadow:2px 2px 4px rgba(0,0,0,1);box-shadow:0 4px 8px #000;flex:0 0 48%;box-sizing:border-box}\"]\n    });\n  }\n  return TutorialComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}